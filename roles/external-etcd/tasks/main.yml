---
# tasks/main.yml

- name: Ensure kubelet service directory exists
  file:
    path: /etc/systemd/system/kubelet.service.d
    state: directory

- name: Create kubelet configuration
  template:
    src: kubelet.conf.j2
    dest: /etc/systemd/system/kubelet.service.d/kubelet.conf

- name: Create etcd service manager configuration
  template:
    src: 20-etcd-service-manager.conf.j2
    dest: /etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf

- name: Reload systemd and restart kubelet
  systemd:
    daemon_reload: yes
    name: kubelet
    state: restarted

- name: Generate kubeadm configuration files
  template:
    src: kubeadmcfg.yaml.j2
    dest: "/tmp/{{ ansible_host }}/kubeadmcfg.yaml"
  loop: "{{ groups['etcd-nodes'] }}"
  vars:
    ansible_host: "{{ item }}"

- name: Create etcd CA
  command: kubeadm init phase certs etcd-ca
  delegate_to: "{{ groups['etcd-nodes'][0] }}"

- name: Generate etcd certificates
  command: kubeadm init phase certs etcd-server --config=/tmp/{{ ansible_host }}/kubeadmcfg.yaml
  command: kubeadm init phase certs etcd-peer --config=/tmp/{{ ansible_host }}/kubeadmcfg.yaml
  command: kubeadm init phase certs etcd-healthcheck-client --config=/tmp/{{ ansible_host }}/kubeadmcfg.yaml
  command: kubeadm init phase certs apiserver-etcd-client --config=/tmp/{{ ansible_host }}/kubeadmcfg.yaml
  loop: "{{ groups['etcd-nodes'] }}"
  vars:
    ansible_host: "{{ item }}"

- name: Clean up non-reusable certificates
  command: find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
  delegate_to: "{{ groups['etcd-nodes'][0] }}"

- name: Copy certificates and configs to hosts
  synchronize:
    src: "/tmp/{{ inventory_hostname }}/"
    dest: "/etc/kubernetes/"
  delegate_to: "{{ item }}"
  loop: "{{ groups['etcd-nodes'] }}"

- name: Create static pod manifests
  command: kubeadm init phase etcd local --config=/tmp/{{ ansible_host }}/kubeadmcfg.yaml
  loop: "{{ groups['etcd-nodes'] }}"
  vars:
    ansible_host: "{{ item }}"
