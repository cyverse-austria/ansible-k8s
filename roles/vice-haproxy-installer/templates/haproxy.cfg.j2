global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    stats       socket /run/haproxy/admin.sock
    stats       timeout 30s
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    tune.ssl.default-dh-param 2048

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log       global
    mode      http
    option    httplog
    option    dontlognull
    option    forwardfor
    option    http-server-close
    timeout   connect 5000
    timeout   client  50000
    timeout   server  50000

frontend reverseproxy_http
    mode http
    bind *:80
    redirect scheme https

frontend reverseproxy
    mode http
    bind *:443 ssl crt {{ tls_pem_path }}
    
    http-request set-header Host vice-landing if { hdr(host) -i vice.cyverse.at }
    http-request set-var(req.subdomain) req.hdr(host),lower,regsub(\.vice\.cyverse\.at$,) if { hdr_end(host) -i .vice.cyverse.at }
    http-request set-header Host %[var(req.subdomain)] if { var(req.subdomain) -m found }
    http-request set-header X-Frontend-URL %[var(req.scheme)]://%[var(req.subdomain)].vice.cyverse.at%[path] if { var(req.subdomain) -m found }

    default_backend proxynodes

backend proxynodes
    mode http
    option log-health-checks
{% for host in groups['k8s-workers'] %}
    server   {{ hostvars[host].ansible_hostname }} {{ hostvars[host].ansible_fqdn }}:31377 check
{% endfor %}
