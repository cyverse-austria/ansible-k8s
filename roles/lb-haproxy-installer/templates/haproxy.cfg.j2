global
    log 127.0.0.1 local2
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    maxconn 4000
    user haproxy
    group haproxy
    daemon

    # SSL/TLS settings
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Strong TLS protocols: disable SSLv3, TLS 1.0, TLS 1.1
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

    # Strong cipher suites prioritizing AEAD and modern TLS 1.2/1.3 ciphers
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:!aNULL:!MD5:!DSS

    # Strong Diffie-Hellman parameters
    tune.ssl.default-dh-param 2048

    # Optional second stats socket
    stats socket /var/lib/haproxy/stats mode 660 level admin

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close
    timeout connect 5000ms
    timeout client  50000ms
    timeout server  50000ms

frontend reverseproxy_http
    mode http
    bind *:80
    redirect scheme https

frontend http-in
    bind *:443 ssl crt {{ tls_pem_path }} ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Proto https

    # Route all subdomains of lb.cyverse.at to the same backend
    acl is_lb_subdomain hdr_reg(host) -i ^.*\.{{ domain | regex_escape }}$
    use_backend k8s_ingress if is_lb_subdomain

backend k8s_ingress
    mode http
    option log-health-checks
{% for host in groups['k8s-workers'] %}
    server   {{ hostvars[host].ansible_hostname }} {{ hostvars[host].ansible_fqdn }}:80 check
{% endfor %}
