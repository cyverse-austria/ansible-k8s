global
    log 127.0.0.1 local2
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    maxconn 4000
    user haproxy
    group haproxy
    daemon

    # SSL/TLS paths
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # TLS security
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-bind-ciphers TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:!aNULL:!MD5:!DSS:!3DES
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 2048

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close
    timeout connect 5000ms
    timeout client  50000ms
    timeout server  50000ms
    timeout http-request 10s
    timeout queue 30s
    timeout http-keep-alive 10s

# Redirect all HTTP traffic to HTTPS
frontend reverseproxy_http
    bind *:80
    mode http
    redirect scheme https code 301 if !{ ssl_fc }

# Handle HTTPS traffic and forward to Kubernetes Ingress
frontend http-in
    bind *:443 ssl crt {{ tls_pem_path }} ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3 alpn h2,http/1.1
    mode http
    option httplog
    option forwardfor
    http-request set-header X-Forwarded-Proto https
    http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

    # Route wildcard subdomains to Kubernetes backend
    acl is_lb_subdomain hdr_reg(host) -i ^.*\.{{ domain | regex_escape }}$
    use_backend k8s_ingress if is_lb_subdomain

backend k8s_ingress
    mode http
    option log-health-checks

    # Re-set headers for backend trust
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Port 443
    http-request del-header Proxy
    http-request del-header X-Forwarded-For

{% for host in groups['k8s-workers'] %}
    server   {{ hostvars[host].ansible_hostname }} {{ hostvars[host].ansible_fqdn }}:80 check
{% endfor %}
