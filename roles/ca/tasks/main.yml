---
- name: Install necessary packages
  package:
    name: openssl
    state: present

- name: Create CA directories
  file:
    path: "{{ ca_directory }}/{{ item }}"
    state: directory
    mode: '0700'
  loop:
    - private
    - certs
    - newcerts
    - crl

- name: Create index.txt and serial files
  copy:
    content: "{{ item }}"
    dest: "{{ ca_directory }}/{{ item }}"
  loop:
    - { name: 'index.txt', content: '' }
    - { name: 'serial', content: '01' }

- name: Generate CA private key without passphrase
  command: >
    openssl genpkey
    -algorithm RSA
    -out {{ ca_key_file }}
  args:
    creates: "{{ ca_key_file }}"

- name: Generate CA root certificate
  command: >
    openssl req
    -x509
    -new
    -key {{ ca_key_file }}
    -sha256
    -days {{ ca_validity_days }}
    -out {{ ca_cert_file }}
    -subj "/C={{ ca_country }}/ST={{ ca_state }}/L={{ ca_locality }}/O={{ ca_organization }}/OU={{ ca_organizational_unit }}/CN={{ ca_name }}/emailAddress={{ ca_email }}"
  args:
    creates: "{{ ca_cert_file }}"
#####################################################################
##################################################

- name: Generate private key for each etcd node
  openssl_privatekey:
    path: "{{ ca_directory }}/private/{{ inventory_hostname }}.key"
    size: 2048
    state: present
  delegate_to: localhost
  loop: "{{ groups['etcd-nodes'] }}"
  loop_control:
    label: "{{ item }}"

- name: Generate CSR for each etcd node
  openssl_csr:
    path: "{{ ca_directory }}/newcerts/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ ca_directory }}/private/{{ inventory_hostname }}.key"
    common_name: "{{ inventory_hostname }}"
    subject_alt_name: "DNS:{{ inventory_hostname }}"
  delegate_to: localhost
  loop: "{{ groups['etcd-nodes'] }}"
  loop_control:
    label: "{{ item }}"

- name: Sign CSR with CA for each etcd node
  command: >
    openssl x509
    -req
    -in {{ ca_directory }}/newcerts/{{ inventory_hostname }}.csr
    -CA {{ ca_cert_file }}
    -CAkey {{ ca_key_file }}
    -CAcreateserial
    -out {{ ca_directory }}/certs/{{ inventory_hostname }}.crt
    -days {{ cert_validity_days }}
    -sha256
  delegate_to: localhost
  loop: "{{ groups['etcd-nodes'] }}"
  loop_control:
    label: "{{ item }}"

- name: Distribute certificates and keys to each etcd node
  copy:
    src: "{{ ca_directory }}/private/{{ inventory_hostname }}.key"
    dest: "/etc/etcd/ssl/{{ inventory_hostname }}.key"
    mode: '0600'
  delegate_to: "{{ item }}"
  loop: "{{ groups['etcd-nodes'] }}"
  loop_control:
    label: "{{ item }}"

- name: Distribute CA certificate to each etcd node
  copy:
    src: "{{ ca_cert_file }}"
    dest: "/etc/etcd/ssl/ca.crt"
    mode: '0644'
  delegate_to: "{{ item }}"
  loop: "{{ groups['etcd-nodes'] }}"
  loop_control:
    label: "{{ item }}"

- name: Distribute signed certificates to each etcd node
  copy:
    src: "{{ ca_directory }}/certs/{{ inventory_hostname }}.crt"
    dest: "/etc/etcd/ssl/{{ inventory_hostname }}.crt"
    mode: '0644'
  delegate_to: "{{ item }}"
  loop: "{{ groups['etcd-nodes'] }}"
  loop_control:
    label: "{{ item }}"